.data
    quebra_l:   .asciiz     "\n"

.text
main:
    li $a0, -3
    li $a1, 4
    jal MyMult
    j fim


MyMult:
    move $s0, $a0
    move $s1, $a1
    
    move $s3, $0        # lw product
    move $s4, $0        # hw product

    beq $s1, $0, done
    beq $s0, $0, done

    move $s2, $0        # extend multiplicand to 64 bits

loop:
    andi $t0, $s0, 1    # LSB(multiplier)
    beq $t0, $0, next   # skip if zero
    addu $s3, $s3, $s1  # lw(product) += lw(multiplicand)
    sltu $t0, $s3, $s1  # catch carry-out(0 or 1)
    addu $s4, $s4, $t0  # hw(product) += carry
    addu $s4, $s4, $s2  # hw(product) += hw(multiplicand)
next:
    # shift multiplicand left
    srl $t0, $s1, 31    # copy bit from lw to hw
    sll $s1, $s1, 1
    sll $s2, $s2, 1
    addu $s2, $s2, $t0

    srl $s0, $s0, 1     # shift multiplier right
    bne $s0, $0, loop

done:
    jr $ra

fim:
    li $v0, 1                       #printa $lo
    move $a0, $s3
    syscall

    li $v0, 4                       #quebra linha
    la $a0, quebra_l
    syscall

    li $v0, 1                       #printa $hi
    move $a0, $s4
    syscall

    li $v0, 4                       #quebra linha
    la $a0, quebra_l
    syscall

    li $v0, 10                      #fim
    syscall
